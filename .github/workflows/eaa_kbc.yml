name: EAA kbc build CI
on:
  push:
    paths:
      - 'src/kbc_modules/eaa_kbc/**'
  pull_request:
    paths:
      - 'src/kbc_modules/eaa_kbc/**'
  create:
    paths:
      - 'src/kbc_modules/eaa_kbc/**'

jobs:
  eaa_kbc_ci:
    if: github.event_name == 'pull_request'
    name: Check
    runs-on: ubuntu18.04
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Install rats-tls dependencies
        run: |
          apt-get update && apt-get install -y autoconf gcc g++ make wget git cmake \
          libseccomp-dev binutils-dev libprotoc-dev protobuf-compiler \
          pkg-config libssl-dev openssl libtool file curl gnupg;

          wget https://github.com/protobuf-c/protobuf-c/archive/v1.3.1.tar.gz &&\
          tar -zxvf v1.3.1.tar.gz && cd protobuf-c-1.3.1 && ./autogen.sh && \
          ./configure && make && make install

          wget https://download.01.org/intel-sgx/sgx-linux/2.14/as.ld.objdump.gold.r3.tar.gz && \
          tar -zxvf as.ld.objdump.gold.r3.tar.gz && cp -rf external/toolset/ubuntu18.04/* /usr/local/bin/ && \
          rm -rf external && rm -rf as.ld.objdump.gold.r3.tar.gz

          wget https://download.01.org/intel-sgx/sgx-linux/2.14/distro/ubuntu18.04-server/sgx_linux_x64_sdk_2.14.100.2.bin;
          chmod +x sgx_linux_x64_sdk_2.14.100.2.bin &&  echo -e 'no\n/opt/intel\n' | ./sgx_linux_x64_sdk_2.14.100.2.bin;
          rm -rf sgx_linux_x64_sdk_2.14.100.2.bin;

          source /opt/intel/sgxsdk/environment;

          echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | tee /etc/apt/sources.list.d/intel-sgx.list && \
          wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -;
          
          apt-get update -y && apt-get install -y libsgx-dcap-quote-verify libsgx-dcap-default-qpl libsgx-dcap-ql-dev libsgx-uae-service libsgx-dcap-quote-verify-dev;

      - name: Install rats-tls
        run: | 
          git clone https://github.com/alibaba/inclavare-containers && cd inclavare-containers/rats-tls;
          cmake -DBUILD_SAMPLES=on -H. -Bbuild && make -C build install;
      
      - name: Build AA with EAA KBC
        run: |
          make KBC=eaa_kbc && make install;
